name: Build

on: [push]

env:
  # Customize the CMake build type here (MinSizeRel, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: MinSizeRel

jobs:
  build:
    runs-on: windows-2022

    steps:
    - uses: actions/checkout@v3.2.0
      with:
          fetch-depth: 0
          submodules: 'true'
     
    - name: Download Server
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        mkdir D:/BDS
        ServerLink=$(cat 'LINK.txt')
        curl -L -o D:/BDS/server.zip "$ServerLink"
        unzip D:/BDS/server.zip -d D:/BDS > /dev/null
      shell: bash

    - name: Build Library
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        cd SDK/Tools
        ./PeEditor.exe -o ..\Lib D:\BDS 
      shell: cmd

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
    
    - name: MkDirs
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        mkdir D:/out/plugins
        mkdir D:/out/plugins/lib
    
    - name: Copy Out Files
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        cp D:/a/GMLIB/GMLIB/build/MinSizeRel/*.dll D:/out/plugins
        cp D:/a/GMLIB/GMLIB/assets/lib/plhook.dll D:/out/plugins/lib
      shell: bash

    - name: Upload plugins
      uses: actions/upload-artifact@v1.0.0
      with:
        name: GMLIB
        path: D:/out/plugins

    - name: Compress to zip
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        7z a D:/out/GMLIB.zip D:/out/plugins
      shell: bash

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        body_path: ${{ github.workspace }}\CHANGELOG.md
        files: |
          D:/out/GMLIB.zip
          D:/a/GMLIB/GMLIB/lib/GMLib.lib
          D:/a/GMLIB/GMLIB/include/GMLib/GMLib_ModAPI.h
